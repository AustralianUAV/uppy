{"version":3,"sources":["createUppy.js"],"names":["Uppy","require","has","eventNames","onFileAdded","onFileRemoved","onImportError","onAssemblyCreated","onAssemblyExecuting","onAssemblyError","onAssemblyComplete","onResult","onStart","onPause","onFilePause","onCancel","onError","onFileCancel","onFileProgress","onFileError","onUploaded","onComplete","uppyOptionNames","createUppy","opts","overrides","uppyOptions","forEach","name","uppy","Object","keys","optionName","eventName","on","onProgress","getState","totalProgress","call","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,6BAAD,CAAnB;;AAEA,IAAME,UAAU,GAAG;AACjB;AACAC,EAAAA,WAAW,EAAE,YAFI;AAGjBC,EAAAA,aAAa,EAAE,cAHE;AAKjB;AACAC,EAAAA,aAAa,EAAE,0BANE;AAOjBC,EAAAA,iBAAiB,EAAE,8BAPF;AAQjBC,EAAAA,mBAAmB,EAAE,gCARJ;AASjBC,EAAAA,eAAe,EAAE,4BATA;AAUjBC,EAAAA,kBAAkB,EAAE,sBAVH;AAWjBC,EAAAA,QAAQ,EAAE,oBAXO;AAajB;AACAC,EAAAA,OAAO,EAAE,QAdQ;AAejBC,EAAAA,OAAO,EAAE,WAfQ;AAgBjBC,EAAAA,WAAW,EAAE,cAhBI;AAiBjBC,EAAAA,QAAQ,EAAE,YAjBO;AAkBjBC,EAAAA,OAAO,EAAE,OAlBQ;AAkBC;AAClBC,EAAAA,YAAY,EAAE,eAnBG;AAoBjBC,EAAAA,cAAc,EAAE,iBApBC;AAqBjBC,EAAAA,WAAW,EAAE,cArBI;AAsBjBC,EAAAA,UAAU,EAAE,oBAtBK;AAuBjBC,EAAAA,UAAU,EAAE,UAvBK,CAuBM;;AAvBN,CAAnB;AA0BA,IAAMC,eAAe,GAAG,CACtB,aADsB,EAEtB,cAFsB,EAGtB,MAHsB,EAItB,mBAJsB,EAKtB,gBALsB,EAMtB,OANsB,CAAxB;;AAQA,SAASC,UAAT,CAAqBC,IAArB,EAA2BC,SAA3B,EAA2C;AAAA,MAAhBA,SAAgB;AAAhBA,IAAAA,SAAgB,GAAJ,EAAI;AAAA;;AACzC,MAAMC,WAAW,GAAG,EAApB;AACAJ,EAAAA,eAAe,CAACK,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChC,QAAI1B,GAAG,CAACsB,IAAD,EAAOI,IAAP,CAAP,EAAqBF,WAAW,CAACE,IAAD,CAAX,GAAoBJ,IAAI,CAACI,IAAD,CAAxB;AACtB,GAFD;;AAGA,WAAcF,WAAd,EAA2BD,SAA3B;;AAEA,MAAMI,IAAI,GAAG,IAAI7B,IAAJ,CAAS0B,WAAT,CAAb,CAPyC,CASzC;;AACAI,EAAAA,MAAM,CAACC,IAAP,CAAY5B,UAAZ,EAAwBwB,OAAxB,CAAgC,UAACK,UAAD,EAAgB;AAC9C,QAAMC,SAAS,GAAG9B,UAAU,CAAC6B,UAAD,CAA5B;;AACA,QAAI,OAAOR,IAAI,CAACQ,UAAD,CAAX,KAA4B,UAAhC,EAA4C;AAC1CH,MAAAA,IAAI,CAACK,EAAL,CAAQD,SAAR,EAAmBT,IAAI,CAACQ,UAAD,CAAvB;AACD;AACF,GALD,EAVyC,CAiBzC;;AACA,MAAI,OAAOR,IAAI,CAACW,UAAZ,KAA2B,UAA/B,EAA2C;AACzCN,IAAAA,IAAI,CAACK,EAAL,CAAQ,iBAAR,EAA2B,YAAM;AAAA,2BACLL,IAAI,CAACO,QAAL,EADK;AAAA,UACvBC,aADuB,kBACvBA,aADuB;;AAE/Bb,MAAAA,IAAI,CAACW,UAAL,CAAgBG,IAAhB,CAAqBT,IAArB,EAA2BQ,aAA3B;AACD,KAHD;AAID;;AAED,SAAOR,IAAP;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBjB,UAAjB","sourcesContent":["const Uppy = require('@uppy/core')\nconst has = require('@uppy/utils/lib/hasProperty')\n\nconst eventNames = {\n  // File management events\n  onFileAdded: 'file-added',\n  onFileRemoved: 'file-removed',\n\n  // Transloadit events\n  onImportError: 'transloadit:import-error',\n  onAssemblyCreated: 'transloadit:assembly-created',\n  onAssemblyExecuting: 'transloadit:assembly-executing',\n  onAssemblyError: 'transloadit:assembly-error',\n  onAssemblyComplete: 'transloadit:complete',\n  onResult: 'transloadit:result',\n\n  // Upload events\n  onStart: 'upload',\n  onPause: 'pause-all',\n  onFilePause: 'upload-pause',\n  onCancel: 'cancel-all',\n  onError: 'error', // mostly akin to promise rejection\n  onFileCancel: 'upload-cancel',\n  onFileProgress: 'upload-progress',\n  onFileError: 'upload-error',\n  onUploaded: 'transloadit:upload',\n  onComplete: 'complete' // mostly akin to promise resolution\n}\n\nconst uppyOptionNames = [\n  'autoProceed',\n  'restrictions',\n  'meta',\n  'onBeforeFileAdded',\n  'onBeforeUpload',\n  'debug'\n]\nfunction createUppy (opts, overrides = {}) {\n  const uppyOptions = {}\n  uppyOptionNames.forEach((name) => {\n    if (has(opts, name)) uppyOptions[name] = opts[name]\n  })\n  Object.assign(uppyOptions, overrides)\n\n  const uppy = new Uppy(uppyOptions)\n\n  // Builtin event aliases\n  Object.keys(eventNames).forEach((optionName) => {\n    const eventName = eventNames[optionName]\n    if (typeof opts[optionName] === 'function') {\n      uppy.on(eventName, opts[optionName])\n    }\n  })\n\n  // Custom events (these should probably be added to core)\n  if (typeof opts.onProgress === 'function') {\n    uppy.on('upload-progress', () => {\n      const { totalProgress } = uppy.getState()\n      opts.onProgress.call(uppy, totalProgress)\n    })\n  }\n\n  return uppy\n}\n\nmodule.exports = createUppy\n"]}