{"version":3,"sources":["addTransloaditPlugin.js"],"names":["Transloadit","require","has","TransloaditResults","transloaditOptionNames","addTransloaditPlugin","uppy","opts","transloaditOptions","forEach","name","use","waitForEncoding","module","exports"],"mappings":"AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,6BAAD,CAAnB;;AACA,IAAME,kBAAkB,GAAGF,OAAO,CAAC,4BAAD,CAAlC;;AAEA,IAAMG,sBAAsB,GAAG,CAC7B,SAD6B,EAE7B,iBAF6B,EAG7B,iBAH6B,EAI7B,mBAJ6B,EAK7B,sBAL6B,EAM7B,WAN6B,EAO7B,QAP6B,EAQ7B,QAR6B,EAS7B,OAT6B,EAU7B,QAV6B,EAW7B,oBAX6B,CAA/B;;AAcA,SAASC,oBAAT,CAA+BC,IAA/B,EAAqCC,IAArC,EAA2C;AACzC,MAAMC,kBAAkB,GAAG,EAA3B;AACAJ,EAAAA,sBAAsB,CAACK,OAAvB,CAA+B,UAACC,IAAD,EAAU;AACvC,QAAIR,GAAG,CAACK,IAAD,EAAOG,IAAP,CAAP,EAAqBF,kBAAkB,CAACE,IAAD,CAAlB,GAA2BH,IAAI,CAACG,IAAD,CAA/B;AACtB,GAFD;AAGAJ,EAAAA,IAAI,CAACK,GAAL,CAASX,WAAT,EAAsBQ,kBAAtB,EALyC,CAOzC;;AACA,MAAIA,kBAAkB,CAACI,eAAvB,EAAwC;AACtCN,IAAAA,IAAI,CAACK,GAAL,CAASR,kBAAT;AACD;AACF;;AAEDU,MAAM,CAACC,OAAP,GAAiBT,oBAAjB","sourcesContent":["const Transloadit = require('@uppy/transloadit')\nconst has = require('@uppy/utils/lib/hasProperty')\nconst TransloaditResults = require('./TransloaditResultsPlugin')\n\nconst transloaditOptionNames = [\n  'service',\n  'waitForEncoding',\n  'waitForMetadata',\n  'alwaysRunAssembly',\n  'importFromUploadURLs',\n  'signature',\n  'params',\n  'fields',\n  'limit',\n  'locale',\n  'getAssemblyOptions'\n]\n\nfunction addTransloaditPlugin (uppy, opts) {\n  const transloaditOptions = {}\n  transloaditOptionNames.forEach((name) => {\n    if (has(opts, name)) transloaditOptions[name] = opts[name]\n  })\n  uppy.use(Transloadit, transloaditOptions)\n\n  // Adds a `results` key to the upload result data containing a flat array of all results from all Assemblies.\n  if (transloaditOptions.waitForEncoding) {\n    uppy.use(TransloaditResults)\n  }\n}\n\nmodule.exports = addTransloaditPlugin\n"]}