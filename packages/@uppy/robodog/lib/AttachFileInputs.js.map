{"version":3,"sources":["AttachFileInputs.js"],"names":["require","Plugin","toArray","findDOMElement","AttachFileInputs","uppy","opts","id","type","handleChange","bind","inputs","event","addFiles","target","input","files","forEach","file","addFile","source","name","data","err","isRestriction","log","install","el","Error","restrictions","querySelectorAll","addEventListener","hasAttribute","maxNumberOfFiles","setAttribute","removeAttribute","allowedFileTypes","join","uninstall","removeEventListener","module","exports"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst toArray = require('@uppy/utils/lib/toArray')\nconst findDOMElement = require('@uppy/utils/lib/findDOMElement')\n\n/**\n * Add files from existing file inputs to Uppy.\n */\nclass AttachFileInputs extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n\n    this.id = this.opts.id || 'AttachFileInputs'\n    this.type = 'acquirer'\n\n    this.handleChange = this.handleChange.bind(this)\n    this.inputs = null\n  }\n\n  handleChange (event) {\n    this.addFiles(event.target)\n  }\n\n  addFiles (input) {\n    const files = toArray(input.files)\n    files.forEach((file) => {\n      try {\n        this.uppy.addFile({\n          source: this.id,\n          name: file.name,\n          type: file.type,\n          data: file\n        })\n      } catch (err) {\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    })\n  }\n\n  install () {\n    this.el = findDOMElement(this.opts.target)\n    if (!this.el) {\n      throw new Error('[AttachFileInputs] Target form does not exist')\n    }\n\n    const { restrictions } = this.uppy.opts\n\n    this.inputs = this.el.querySelectorAll('input[type=\"file\"]')\n    this.inputs.forEach((input) => {\n      input.addEventListener('change', this.handleChange)\n\n      if (!input.hasAttribute('multiple')) {\n        if (restrictions.maxNumberOfFiles !== 1) {\n          input.setAttribute('multiple', 'multiple')\n        } else {\n          input.removeAttribute('multiple')\n        }\n      }\n\n      if (!input.hasAttribute('accept') && restrictions.allowedFileTypes) {\n        input.setAttribute('accept', restrictions.allowedFileTypes.join(','))\n      }\n\n      // Check if this input already contains files (eg. user selected them before Uppy loaded,\n      // or the page was refreshed and the browser kept files selected)\n      this.addFiles(input)\n    })\n  }\n\n  uninstall () {\n    this.inputs.forEach((input) => {\n      input.removeEventListener('change', this.handleChange)\n    })\n    this.inputs = null\n  }\n}\n\nmodule.exports = AttachFileInputs\n"]}